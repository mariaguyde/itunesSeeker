{"ast":null,"code":"import Search from \"./components/Search\";\nimport List_result from \"./components/List_result\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tabs.Navigator, {\n      initialRouteName: \"Home\",\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                size = _ref2.size,\n                color = _ref2.color;\n            var iconName;\n\n            if (route.name == \"Recherche\") {\n              iconName = focused ? \"search\" : \"search-outline\";\n            } else if (route.name == \"Musique\") {\n              iconName = focused ? \"musical-notes\" : \"musical-notes-outline\";\n            }\n\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"#11570f\",\n          tabBarInactiveTintColor: \"grey\"\n        };\n      },\n      children: [_jsx(Tabs.Screen, {\n        name: \"Recherche\",\n        initialParams: {\n          addElement: null\n        },\n        component: Search\n      }), _jsx(Tabs.Screen, {\n        name: \"Musique\",\n        initialParams: {\n          addElement: null\n        },\n        component: List_result\n      })]\n    })\n  });\n}\nvar Tabs = createBottomTabNavigator();","map":{"version":3,"sources":["/Users/guydefontgalland/PhpstormProjects/itunesSeeker/App.js"],"names":["Search","List_result","createBottomTabNavigator","NavigationContainer","Ionicons","App","route","tabBarIcon","focused","size","color","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","addElement","Tabs"],"mappings":"AAAA,OAAOA,MAAP;AACA,OAAOC,WAAP;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,QAAP;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,SACI,KAAC,mBAAD;AAAA,cACI,MAAC,IAAD,CAAM,SAAN;AACI,MAAA,gBAAgB,EAAC,MADrB;AAEI,MAAA,aAAa,EAAE;AAAA,YAAGC,KAAH,QAAGA,KAAH;AAAA,eAAgB;AAC3BC,UAAAA,UAAU,EAAE,2BAA8B;AAAA,gBAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,gBAAlBC,IAAkB,SAAlBA,IAAkB;AAAA,gBAAZC,KAAY,SAAZA,KAAY;AACtC,gBAAIC,QAAJ;;AACA,gBAAIL,KAAK,CAACM,IAAN,IAAc,WAAlB,EAA+B;AAC3BD,cAAAA,QAAQ,GAAGH,OAAO,GAAG,QAAH,GAAc,gBAAhC;AACH,aAFD,MAEO,IAAIF,KAAK,CAACM,IAAN,IAAc,SAAlB,EAA6B;AAChCD,cAAAA,QAAQ,GAAGH,OAAO,GAAG,eAAH,GAAqB,uBAAvC;AACH;;AACD,mBAAO,KAAC,QAAD;AAAU,cAAA,IAAI,EAAEG,QAAhB;AAA0B,cAAA,IAAI,EAAEF,IAAhC;AAAsC,cAAA,KAAK,EAAEC;AAA7C,cAAP;AACH,WAT0B;AAU3BG,UAAAA,qBAAqB,EAAE,SAVI;AAW3BC,UAAAA,uBAAuB,EAAE;AAXE,SAAhB;AAAA,OAFnB;AAAA,iBAgBI,KAAC,IAAD,CAAM,MAAN;AACI,QAAA,IAAI,EAAC,WADT;AAEI,QAAA,aAAa,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAFnB;AAGI,QAAA,SAAS,EAAEf;AAHf,QAhBJ,EAqBI,KAAC,IAAD,CAAM,MAAN;AACI,QAAA,IAAI,EAAC,SADT;AAEI,QAAA,aAAa,EAAE;AAAEe,UAAAA,UAAU,EAAE;AAAd,SAFnB;AAGI,QAAA,SAAS,EAAEd;AAHf,QArBJ;AAAA;AADJ,IADJ;AA+BD;AACD,IAAMe,IAAI,GAAGd,wBAAwB,EAArC","sourcesContent":["import Search from \"./components/Search\";\nimport List_result from \"./components/List_result\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\n\nexport default function App() {\n  return (\n      <NavigationContainer>\n          <Tabs.Navigator\n              initialRouteName=\"Home\"\n              screenOptions={({ route }) => ({\n                  tabBarIcon: ({ focused, size, color }) => {\n                      let iconName;\n                      if (route.name == \"Recherche\") {\n                          iconName = focused ? \"search\" : \"search-outline\";\n                      } else if (route.name == \"Musique\") {\n                          iconName = focused ? \"musical-notes\" : \"musical-notes-outline\";\n                      }\n                      return <Ionicons name={iconName} size={size} color={color} />;\n                  },\n                  tabBarActiveTintColor: \"#11570f\",\n                  tabBarInactiveTintColor: \"grey\",\n              })}\n          >\n              <Tabs.Screen\n                  name=\"Recherche\"\n                  initialParams={{ addElement: null }}\n                  component={Search}\n              />\n              <Tabs.Screen\n                  name=\"Musique\"\n                  initialParams={{ addElement: null }}\n                  component={List_result}\n              />\n          </Tabs.Navigator>\n      </NavigationContainer>\n  );\n}\nconst Tabs = createBottomTabNavigator();\n"]},"metadata":{},"sourceType":"module"}