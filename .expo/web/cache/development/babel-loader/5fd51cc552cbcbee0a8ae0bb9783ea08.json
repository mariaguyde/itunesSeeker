{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useEffect, useState } from \"react/cjs/react.development\";\nimport Popup from 'reactjs-popup';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var ListFavoriteMusic = [];\n\nvar itunes_request = function itunes_request(keyword) {\n  var response, json;\n  return _regeneratorRuntime.async(function itunes_request$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(!keyword == \"\")) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://itunes.apple.com/search?term=\" + keyword));\n\n        case 3:\n          response = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 6:\n          json = _context.sent;\n          return _context.abrupt(\"return\", json.results.filter(function (item) {\n            return item.trackId && item.trackName;\n          }).map(song_infos));\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar Search = function Search(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listResults = _useState4[0],\n      setListResults = _useState4[1];\n\n  function addToFavoriteMusic(song) {\n    ListFavoriteMusic.push(song);\n  }\n\n  var get_results = function get_results() {\n    itunes_request(input).then(function (result) {\n      setListResults(result);\n    });\n  };\n\n  useEffect(function () {\n    var timeout = setTimeout(get_results, 700);\n    return function () {\n      clearTimeout(timeout);\n    };\n  }, [input]);\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(TextInput, {\n      value: input,\n      onChangeText: setInput,\n      placeholder: \"Nom de la musique ou de l' artiste\"\n    }), _jsx(View, {\n      style: {\n        flex: 1,\n        marginTop: \"20px\"\n      },\n      children: _jsx(FlatList, {\n        data: listResults,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsx(TouchableOpacity, {\n            style: {\n              margin: \"10px\"\n            },\n            children: _jsxs(\"div\", {\n              style: song,\n              class: \"song\",\n              children: [_jsx(Image, {\n                style: {\n                  width: 150,\n                  height: 150\n                },\n                source: {\n                  uri: item.image\n                }\n              }), _jsxs(\"div\", {\n                style: sideContainer,\n                children: [_jsxs(\"div\", {\n                  style: {\n                    display: \"grid\",\n                    marginBottom: \"10px\"\n                  },\n                  children: [_jsx(Text, {\n                    style: {\n                      fontWeight: \"bold\",\n                      fontSize: \"20px\"\n                    },\n                    children: item.song\n                  }), _jsx(Text, {\n                    children: item.artist\n                  })]\n                }), _jsxs(\"div\", {\n                  children: [_jsx(\"button\", {\n                    style: {\n                      backgroundColor: \"#11570f\",\n                      width: \"fit-content\",\n                      border: \"none\",\n                      color: \"white\",\n                      padding: \"10px 19px\",\n                      marginRight: \"10px\",\n                      borderRadius: \"10px\"\n                    },\n                    onClick: function onClick() {\n                      return addToFavoriteMusic(item);\n                    },\n                    children: \"Ajouter \\xE0 ma liste\"\n                  }), _jsx(\"span\", {\n                    children: _jsx(Popup, {\n                      trigger: _jsx(\"button\", {\n                        style: {\n                          backgroundColor: \"#11570f\",\n                          border: \"none\",\n                          color: \"white\",\n                          padding: \"10px 19px\",\n                          width: \"fit-content\",\n                          marginRight: \"10px\",\n                          borderRadius: \"10px\"\n                        },\n                        className: \"button\",\n                        children: \"Voir les d\\xE9tails de ce film\"\n                      }),\n                      modal: true,\n                      nested: true,\n                      children: function children(close) {\n                        return _jsxs(\"div\", {\n                          style: popup,\n                          className: \"modal\",\n                          children: [_jsx(\"button\", {\n                            className: \"close\",\n                            onClick: close,\n                            children: \"\\xD7\"\n                          }), _jsxs(\"div\", {\n                            className: \"header\",\n                            style: {\n                              fontWeight: \"bold\",\n                              marginBottom: \"10px\",\n                              marginTop: \"10px\",\n                              fontSize: \"20px\"\n                            },\n                            children: [\" \", item.song, \" \"]\n                          }), _jsx(Image, {\n                            style: {\n                              width: 190,\n                              height: 190,\n                              marginTop: \"10px\"\n                            },\n                            source: {\n                              uri: item.image\n                            }\n                          }), _jsxs(\"div\", {\n                            className: \"content\",\n                            style: {\n                              display: \"grid\",\n                              marginTop: \"30px\"\n                            },\n                            children: [_jsxs(\"span\", {\n                              children: [\" Artiste: \", item.artist, \" \"]\n                            }), _jsxs(\"span\", {\n                              children: [\" Genre : \", item.genre, \" \"]\n                            }), _jsxs(\"span\", {\n                              children: [\" Date de sortie : \", item.release, \" \"]\n                            })]\n                          })]\n                        });\n                      }\n                    })\n                  })]\n                })]\n              })]\n            })\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        }\n      })\n    })]\n  });\n};\n\nvar popup = {\n  backgroundColor: \"white\",\n  padding: \"20px\",\n  width: \"200px\"\n};\nvar song = {\n  display: \"flex\"\n};\nvar sideContainer = {\n  marginLeft: \"10px\"\n};\n\nvar song_infos = function song_infos(song) {\n  var releaseDate = song.releaseDate.substring(0, 10);\n  return {\n    id: song.trackId.toString(),\n    song: song.trackName,\n    artist: song.artistName,\n    image: song.artworkUrl100,\n    genre: song.primaryGenreName,\n    release: releaseDate,\n    tracK_itunesURL: song.trackViewUrl\n  };\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/guydefontgalland/PhpstormProjects/itunesSeeker/components/Search.js"],"names":["React","useEffect","useState","Popup","ListFavoriteMusic","itunes_request","keyword","fetch","response","json","results","filter","item","trackId","trackName","map","song_infos","Search","input","setInput","listResults","setListResults","addToFavoriteMusic","song","push","get_results","then","result","timeout","setTimeout","clearTimeout","flex","marginTop","margin","width","height","uri","image","sideContainer","display","marginBottom","fontWeight","fontSize","artist","backgroundColor","border","color","padding","marginRight","borderRadius","close","popup","genre","release","id","marginLeft","releaseDate","substring","toString","artistName","artworkUrl100","primaryGenreName","tracK_itunesURL","trackViewUrl"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Image, StyleSheet, Text, TextInput,} from \"react-native\";\nimport { TouchableOpacity, View, FlatList} from \"react-native\";\nimport { useEffect, useState } from \"react/cjs/react.development\";\nimport Popup from 'reactjs-popup';\n\nexport const ListFavoriteMusic =[];\nconst itunes_request = async (keyword) => {\n    if (!keyword == \"\"){\n        const response = await fetch(`https://itunes.apple.com/search?term=${keyword}`);\n        const json = await response.json();\n        //console.log(json.results);\n        return json.results.filter((item) => item.trackId && item.trackName).map(song_infos);\n    }\n};\n\nconst Search = ({ }) => {\n    const [input, setInput] = useState(\"\");\n    const [listResults, setListResults] = useState([]);\n\n    function addToFavoriteMusic(song) {\n        ListFavoriteMusic.push(song);\n        //console.log(ListFavoriteMusic);\n    }\n    const get_results = () => {\n        itunes_request(input).then((result) => {\n            setListResults(result);\n        });\n    };\n    useEffect(() => {\n        const timeout = setTimeout(get_results, 700);\n        return () => {\n            clearTimeout(timeout);\n        };\n    }, [input]);\n\n    return (\n        <View style={{ flex: 1 }}>\n            <TextInput\n                value={input}\n                onChangeText={setInput}\n                placeholder=\"Nom de la musique ou de l' artiste\"\n            />\n            <View style={{ flex: 1 , marginTop:\"20px\"}}>\n                    <FlatList\n                        data={listResults}\n                        renderItem={({ item }) => (\n                            <TouchableOpacity style={{ margin:\"10px\"}}>\n                                <div style={song} class=\"song\">\n                                    <Image style={{ width: 150, height: 150}} source={{uri: item.image,}}/>\n                                    <div style={sideContainer}>\n                                        <div style={{display:\"grid\", marginBottom: \"10px\"}}>\n                                            <Text style={{fontWeight:\"bold\", fontSize:\"20px\"}}>{item.song}</Text>\n                                            <Text>{item.artist}</Text>\n                                        </div>\n\n                                        <div>\n                                            <button  style={{backgroundColor: \"#11570f\", width: \"fit-content\", border: \"none\", color: \"white\", padding: \"10px 19px\", marginRight:\"10px\", borderRadius:\"10px\"}} onClick={() => addToFavoriteMusic(item)}>Ajouter à ma liste</button>\n                                            <span>\n                                              <Popup trigger={<button style={{backgroundColor: \"#11570f\",border: \"none\", color: \"white\", padding: \"10px 19px\", width: \"fit-content\",marginRight:\"10px\",borderRadius:\"10px\"}}  className=\"button\">Voir les détails de ce film</button>} modal nested>\n                                                {close => (\n                                                    <div style={popup} className=\"modal\">\n                                                        <button className=\"close\" onClick={close}>\n                                                            &times;\n                                                        </button>\n                                                        <div className=\"header\" style={{fontWeight: \"bold\", marginBottom:\"10px\", marginTop:\"10px\", fontSize:\"20px\"}}> {item.song} </div>\n                                                        <Image style={{ width: 190, height: 190, marginTop:\"10px\"}} source={{uri: item.image,}}/>\n                                                        <div className=\"content\" style={{display: \"grid\", marginTop: \"30px\"}}>\n                                                            <span> Artiste: {item.artist} </span>\n                                                            <span> Genre : {item.genre} </span>\n                                                            <span> Date de sortie : {item.release} </span>\n                                                        </div>\n                                                    </div>\n                                                )}\n                                              </Popup>\n                                        </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </TouchableOpacity>\n                        )}\n                        keyExtractor={(item) => item.id}\n                    />\n            </View>\n        </View>\n    );\n};\n\nconst popup = {\n    backgroundColor : \"white\",\n    padding : \"20px\",\n    width:\"200px\"\n}\n\nconst song = {\n    display : \"flex\"\n}\n\nconst sideContainer = {\n    marginLeft: \"10px\"\n}\nconst song_infos = (song) => {\n    let releaseDate = song.releaseDate.substring(0, 10);\n    return {\n        id: song.trackId.toString(),\n        song: song.trackName,\n        artist: song.artistName,\n        image: song.artworkUrl100,\n        genre: song.primaryGenreName,\n        release: releaseDate,\n        tracK_itunesURL : song.trackViewUrl};\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}